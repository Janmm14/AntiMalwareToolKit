package optic_fusion1.antimalware.tool.impl;

import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.util.Enumeration;
import java.util.zip.ZipEntry;
import java.util.zip.ZipFile;
import optic_fusion1.antimalware.tool.Tool;
import org.objectweb.asm.ClassReader;
import org.objectweb.asm.tree.AbstractInsnNode;
import org.objectweb.asm.tree.ClassNode;
import org.objectweb.asm.tree.LdcInsnNode;
import org.objectweb.asm.tree.MethodNode;

public class StringPrinter extends Tool {

  @Override
  public void run(String[] args) {
    if (args[0].equalsIgnoreCase("all")) {
      for (File file : new File(".").listFiles()) {
        if (!file.isDirectory() && file.getName().endsWith(".jjar")) {
          printStrings(file.getName());
        }
      }
      return;
    }
    if (!args[0].endsWith(".jar")) {
      System.out.println(args[0] + " is not a jar");
      return;
    }
    printStrings(args[0]);
  }

  private void printStrings(String fileName) {
    try {
      ZipFile zipFile = new ZipFile(new File(fileName));
      Enumeration<? extends ZipEntry> entries = zipFile.entries();
      while (entries.hasMoreElements()) {
        ZipEntry entry = (ZipEntry) entries.nextElement();
        if (entry.isDirectory() || !entry.getName().endsWith(".class")) {
          continue;
        }
        InputStream inputStream = zipFile.getInputStream(entry);
        ClassReader classReader;
        try {
          classReader = new ClassReader(inputStream);
        } catch (Exception e) {
          continue;
        }
        ClassNode classNode = new ClassNode();
        classReader.accept(classNode, 0);
        for (MethodNode method : classNode.methods) {
          for (AbstractInsnNode insnNode : method.instructions.toArray()) {
            if (insnNode instanceof LdcInsnNode && ((LdcInsnNode) insnNode).cst instanceof String) {
              System.out.println(((LdcInsnNode) insnNode).cst.toString());
            }
          }
        }
      }
    } catch (IOException ex) {
      ex.printStackTrace();
    }
  }

}
