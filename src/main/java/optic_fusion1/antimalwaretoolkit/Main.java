package optic_fusion1.antimalwaretoolkit;

import java.util.Arrays;
import java.util.HashMap;
import java.util.Scanner;
import optic_fusion1.antimalwaretoolkit.tool.Tool;
import optic_fusion1.antimalwaretoolkit.tool.impl.ChangeAccess;
import optic_fusion1.antimalwaretoolkit.tool.impl.CleanupInvalidFiles;
import optic_fusion1.antimalwaretoolkit.tool.impl.MethodNamePrinter;
import optic_fusion1.antimalwaretoolkit.tool.impl.StringPrinter;
import org.apache.commons.text.StringTokenizer;
import org.apache.commons.text.matcher.StringMatcherFactory;

public class Main {

  private HashMap<String, Tool> tools = new HashMap<>();
  private boolean isRunning;
  private Scanner scanner = new Scanner(System.in);

  public static void main(String[] args) {
    new Main().main();
  }

  private void init() {
    isRunning = true;
    addTools();
  }

  private void addTools() {
    tools.put("methodnameprinter", new MethodNamePrinter());
    tools.put("changeaccess", new ChangeAccess());
    tools.put("stringprinter", new StringPrinter());
    tools.put("cleanupinvalidfiles", new CleanupInvalidFiles());
  }

  private void main() {
    init();
    while (isRunning) {
      StringTokenizer st = new StringTokenizer(scanner.nextLine());
      st.setQuoteMatcher(StringMatcherFactory.INSTANCE.quoteMatcher());
      String[] args = st.getTokenArray();
      if (args.length == 0) {
        continue;
      }
      Tool tool = tools.get(args[0]);
      if (tool == null) {
        System.out.println(args[0] + " is not a valid tool");
        continue;
      }
      tool.run(Arrays.copyOfRange(args, 1, args.length));
    }
  }

}
